@model LabASP1.Models.ModeloIntermedio
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Editar</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Nombre:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCliente.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCliente.nombre, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Apellido 1:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCliente.apellido1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCliente.apellido1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Apellido 2:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCliente.apellido2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCliente.apellido2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Correo:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCliente.correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCliente.correo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Direccion:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCliente.direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCliente.direccion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Primer Cuenta:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCuenta.numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCuenta.numero, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Primer Cuenta (tipo):</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCuenta.tipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCuenta.tipo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Segunda Cuenta:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCuenta.numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCuenta.numero, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Segunda Cuenta (tipo):</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCuenta.tipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCuenta.tipo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Tercer Cuenta:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCuenta.numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCuenta.numero, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Tercer Cuenta (tipo):</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloCuenta.tipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCuenta.tipo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Telefono:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloTelefono.numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloTelefono.numero, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Segundo Telefono:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloTelefono2.numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloTelefono2.numero, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.modeloCliente.cedula)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Editar" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}






